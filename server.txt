// server
#include <iostream>
#include <fstream>
#include <string>
#include <windows.h>

using namespace std;

const string REQUEST_FILE = "D:\\REQUEST.bin";
const string ANSWER_FILE = "D:\\ANSWER.bin";
const int NAME_SIZE = 25;

struct Student {
    char lastName[NAME_SIZE];
    int grades[4];
};

struct ScholarshipInfo {
    int status;
    int debtCount;
};

ScholarshipInfo analyzeGrades(const Student& student) {
    ScholarshipInfo info;
    info.status = 1;
    info.debtCount = 0;

    bool allExcellent = true;

    for (int i = 0; i < 4; ++i) {
        if (student.grades[i] < 4) {
            info.status = 0;
            info.debtCount++;
            allExcellent = false;
        }
        else if (student.grades[i] < 5)
        {
            allExcellent = false;
        }

    }

    if (allExcellent) {
        info.status = 2;
    }

    return info;
}

int main() {
    setlocale(LC_ALL, "Russian");
    cout << "Сервер запущен..." << endl;
    cout << endl;

    long lastFileSize = 0;

    while (true) {
        ifstream requestFile(REQUEST_FILE, ios::binary);
        requestFile.seekg(0, ios::end);
        long currentFileSize = requestFile.tellg();// Эта строка получает текущую позицию указателя чтения, которая теперь находится в конце файла, и присваивает это значение переменной currentFileSize.
        requestFile.close();

        if (currentFileSize > lastFileSize) {
            // Обнаружен новый запрос
            requestFile.open(REQUEST_FILE, ios::binary);
            requestFile.seekg(lastFileSize, ios::beg); //еремещает указатель чтения в файле requestFile на позицию, определяемую значением lastFileSize, отсчитывая эту позицию от начала файла

            Student student;
            while (requestFile.read((char*)&student, sizeof(Student))) {
                ScholarshipInfo scholarshipInfo = analyzeGrades(student);

                ofstream answerFile(ANSWER_FILE, ios::binary | ios::app);// открывет файл не стирая содержимое
                answerFile.write((char*)&scholarshipInfo, sizeof(ScholarshipInfo));
                answerFile.close();

                cout << "Обработан запрос для студента: " << student.lastName << endl;
                cout << "Задолженности: " << scholarshipInfo.debtCount << endl;
                cout << "Статус: " << scholarshipInfo.status << endl;
                cout << endl;
            }

            lastFileSize = currentFileSize;
            requestFile.close();
        }
        else {
            Sleep(100);
        }
    }

    return 0;
}
